/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SubPanel_Route.java
 *
 * Created on Mar 10, 2012, 12:16:30 PM
 */
package travelsmart;

import java.awt.Color;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JTextField;
import javax.swing.JViewport;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;



/**
 *
 * @author dato
 */
public class SubPanel_Route extends javax.swing.JPanel {

    private DefaultListModel lstModel = new DefaultListModel();
    
    /** Creates new form SubPanel_Route */
    public SubPanel_Route() {        
        this.setOpaque(false);
        initComponents();
        this.lstResult.setModel(lstModel);
        this.lstResult.setCellRenderer(new MyCellRender());
        this.lstResult.setBackground(new Color(0,0,0,0));
        
        this.jScrollPane1.setBackground(Config.dglSearchResult_Color);
        this.jScrollPane1.getViewport().setBackground(Config.dglSearchResult_Color);
        this.jScrollPane1.getViewport().setScrollMode(JViewport.SIMPLE_SCROLL_MODE);
        
        this.jScrollPane1.getVerticalScrollBar().setUI(new myScrollBarUI());
        this.pnList.bgUrl = Config.dglSearchResult_bg;
        this.pnStart.bgUrl = Config.textbox1_bg;
        this.pnEnd.bgUrl = Config.textbox1_bg;
        
        //Add listener change document for text field
        this.txtSearchStart.getDocument().addDocumentListener(new DocumentListener() {
            public void changedUpdate(DocumentEvent e) {
                warn();
            }
            public void removeUpdate(DocumentEvent e) {
                warn();
            }
            public void insertUpdate(DocumentEvent e) {
                warn();
            }

            public void warn() {                
                TravelSmart.getView().dgl_searchresult.SearchName(txtSearchStart.getText());
            }
        });
        this.txtSearchEnd.getDocument().addDocumentListener(new DocumentListener() {
            public void changedUpdate(DocumentEvent e) {
                warn();
            }
            public void removeUpdate(DocumentEvent e) {
                warn();
            }
            public void insertUpdate(DocumentEvent e) {
                warn();
            }

            public void warn() {                
                TravelSmart.getView().dgl_searchresult.SearchName(txtSearchEnd.getText());
            }
        });
    }
    
    public void ShowResult(ArrayList<objLine> lines,objPoint start){
        lstModel.clear();
        int SumHour = 0;
        int SumMinutes =0;
        objPoint startpoint = start;
        for(objLine l: lines){
            String txt = "";
            int hour = (int)l.Length;
        	int minutes = (int)(l.Length*100+0.2) - ((int)l.Length)*100;
            if(l.Start.Index == startpoint.Index){
            	
                txt = "Move from "+l.Start.Name + " to " + l.End.Name + ": " + hour + "  hour and "+minutes + " minutes.";
            	
                startpoint = l.End;
            }
            else {
            	
                txt = "Move from "+l.End.Name + " to " + l.Start.Name + ": " + hour + " hour and "+minutes + " minutes.";
            	
                startpoint = l.Start;
            }        
            SumHour+=hour;
            SumMinutes+=minutes;
            lstModel.addElement(txt);
        }
        	SumHour = SumHour + SumMinutes/60;
        	SumMinutes = SumMinutes%60;
        lstModel.addElement("Total: "+String.valueOf(SumHour)+" hour and "+String.valueOf(SumMinutes)+" minutes.");
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        pnStart = new travelsmart.bgPanel();
        txtSearchStart = new javax.swing.JTextField();
        bttSearchStart = new javax.swing.JButton();
        icon = new javax.swing.JButton();
        pnEnd = new travelsmart.bgPanel();
        txtSearchEnd = new javax.swing.JTextField();
        bttSearchEnd = new javax.swing.JButton();
        pnList = new travelsmart.bgPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstResult = new javax.swing.JList();

        setMinimumSize(new java.awt.Dimension(740, 73));
        setName("Form"); // NOI18N
        setLayout(new java.awt.GridBagLayout());

        pnStart.setName("pnStart"); // NOI18N
        pnStart.setLayout(new java.awt.GridBagLayout());

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(travelsmart.TravelSmart.class).getContext().getResourceMap(SubPanel_Route.class);
        txtSearchStart.setFont(resourceMap.getFont("txtSearchEnd.font")); // NOI18N
        txtSearchStart.setForeground(resourceMap.getColor("txtSearchStart.foreground")); // NOI18N
        txtSearchStart.setText(resourceMap.getString("txtSearchStart.text")); // NOI18N
        txtSearchStart.setBorder(null);
        txtSearchStart.setName("txtSearchStart"); // NOI18N
        txtSearchStart.setNextFocusableComponent(txtSearchEnd);
        txtSearchStart.setOpaque(false);
        txtSearchStart.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtSearchStartFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtSearchStartFocusLost(evt);
            }
        });
        txtSearchStart.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSearchEndKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 200;
        gridBagConstraints.ipady = 11;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 5);
        pnStart.add(txtSearchStart, gridBagConstraints);

        bttSearchStart.setBackground(resourceMap.getColor("bttSearchStart.background")); // NOI18N
        bttSearchStart.setIcon(resourceMap.getIcon("bttSearchStart.icon")); // NOI18N
        bttSearchStart.setText(resourceMap.getString("bttSearchStart.text")); // NOI18N
        bttSearchStart.setBorder(null);
        bttSearchStart.setContentAreaFilled(false);
        bttSearchStart.setFocusPainted(false);
        bttSearchStart.setMargin(new java.awt.Insets(0, 0, 0, 0));
        bttSearchStart.setMaximumSize(new java.awt.Dimension(33, 30));
        bttSearchStart.setMinimumSize(new java.awt.Dimension(33, 30));
        bttSearchStart.setName("bttSearchStart"); // NOI18N
        bttSearchStart.setPreferredSize(new java.awt.Dimension(33, 30));
        bttSearchStart.setPressedIcon(resourceMap.getIcon("bttSearchStart.pressedIcon")); // NOI18N
        bttSearchStart.setRolloverIcon(resourceMap.getIcon("bttSearchStart.rolloverIcon")); // NOI18N
        bttSearchStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttSearchStartActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        pnStart.add(bttSearchStart, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        add(pnStart, gridBagConstraints);

        icon.setIcon(resourceMap.getIcon("icon.icon")); // NOI18N
        icon.setText(resourceMap.getString("icon.text")); // NOI18N
        icon.setBorder(null);
        icon.setContentAreaFilled(false);
        icon.setFocusPainted(false);
        icon.setFocusable(false);
        icon.setName("icon"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        add(icon, gridBagConstraints);

        pnEnd.setName("pnEnd"); // NOI18N
        pnEnd.setLayout(new java.awt.GridBagLayout());

        txtSearchEnd.setFont(resourceMap.getFont("txtSearchEnd.font")); // NOI18N
        txtSearchEnd.setForeground(resourceMap.getColor("txtSearchEnd.foreground")); // NOI18N
        txtSearchEnd.setText(resourceMap.getString("txtSearchEnd.text")); // NOI18N
        txtSearchEnd.setBorder(null);
        txtSearchEnd.setName("txtSearchEnd"); // NOI18N
        txtSearchEnd.setNextFocusableComponent(txtSearchStart);
        txtSearchEnd.setOpaque(false);
        txtSearchEnd.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtSearchEndFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtSearchEndFocusLost(evt);
            }
        });
        txtSearchEnd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSearchEndKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 200;
        gridBagConstraints.ipady = 11;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 5);
        pnEnd.add(txtSearchEnd, gridBagConstraints);

        bttSearchEnd.setBackground(resourceMap.getColor("bttSearchEnd.background")); // NOI18N
        bttSearchEnd.setIcon(resourceMap.getIcon("bttSearchEnd.icon")); // NOI18N
        bttSearchEnd.setBorder(null);
        bttSearchEnd.setContentAreaFilled(false);
        bttSearchEnd.setFocusPainted(false);
        bttSearchEnd.setMargin(new java.awt.Insets(0, 0, 0, 0));
        bttSearchEnd.setName("bttSearchEnd"); // NOI18N
        bttSearchEnd.setPressedIcon(resourceMap.getIcon("bttSearchEnd.pressedIcon")); // NOI18N
        bttSearchEnd.setRolloverIcon(resourceMap.getIcon("bttSearchEnd.rolloverIcon")); // NOI18N
        bttSearchEnd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttSearchStartActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        pnEnd.add(bttSearchEnd, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        add(pnEnd, gridBagConstraints);

        pnList.setName("pnList"); // NOI18N
        pnList.setLayout(new java.awt.GridBagLayout());

        jScrollPane1.setBorder(null);
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setName("jScrollPane1"); // NOI18N

        lstResult.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        lstResult.setName("lstResult"); // NOI18N
        lstResult.setOpaque(false);
        jScrollPane1.setViewportView(lstResult);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 144;
        gridBagConstraints.ipady = 160;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnList.add(jScrollPane1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 0);
        add(pnList, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

private void txtSearchStartFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSearchStartFocusGained
    this.pnStart.bgUrl = Config.textbox1_bg_focus;
    this.pnStart.repaint();
}//GEN-LAST:event_txtSearchStartFocusGained

private void txtSearchStartFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSearchStartFocusLost
    this.pnStart.bgUrl = Config.textbox1_bg;
    this.pnStart.repaint();
}//GEN-LAST:event_txtSearchStartFocusLost

private void txtSearchEndFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSearchEndFocusGained
    this.pnEnd.bgUrl = Config.textbox1_bg_focus;
    this.pnEnd.repaint();
}//GEN-LAST:event_txtSearchEndFocusGained

private void txtSearchEndFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSearchEndFocusLost
    this.pnEnd.bgUrl = Config.textbox1_bg;
    this.pnEnd.repaint();
}//GEN-LAST:event_txtSearchEndFocusLost

private void bttSearchStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttSearchStartActionPerformed
    //If 2 text box not empty
    if(!txtSearchStart.getText().isEmpty() && !txtSearchEnd.getText().isEmpty()){
        TravelSmart.getView().pn_Map.selectingPoint.clear();
        TravelSmart.getView().pn_Map.SearchPoint(txtSearchStart.getText(),1);
        TravelSmart.getView().pn_Map.SearchPoint(txtSearchEnd.getText(),1);        
    }
    else if(txtSearchStart.getText().isEmpty()){
        TravelSmart.getView().pn_Map.SearchPoint(txtSearchEnd.getText(),0);
    }else{
        TravelSmart.getView().pn_Map.SearchPoint(txtSearchStart.getText(),0);
    }
    TravelSmart.getView().dgl_searchresult.setVisible(false);        
}//GEN-LAST:event_bttSearchStartActionPerformed

private void txtSearchEndKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchEndKeyPressed
    switch(evt.getKeyCode()){
        case KeyEvent.VK_ENTER:
            bttSearchStartActionPerformed(null);
            break;
        case KeyEvent.VK_ESCAPE:
            if(TravelSmart.getView().dgl_searchresult.isVisible()){
                TravelSmart.getView().dgl_searchresult.setVisible(false);
            }
            break;
        case KeyEvent.VK_UP:
            TravelSmart.getView().dgl_searchresult.ShowDgl((JTextField)evt.getComponent());
            TravelSmart.getView().dgl_searchresult.NextItem();
            break;
        case KeyEvent.VK_LEFT:
            TravelSmart.getView().dgl_searchresult.ShowDgl((JTextField)evt.getComponent());
            TravelSmart.getView().dgl_searchresult.NextItem();
            break;
        case KeyEvent.VK_DOWN:
            TravelSmart.getView().dgl_searchresult.ShowDgl((JTextField)evt.getComponent());
            TravelSmart.getView().dgl_searchresult.NextItem();
            break;
        case KeyEvent.VK_RIGHT:
            TravelSmart.getView().dgl_searchresult.ShowDgl((JTextField)evt.getComponent());
            TravelSmart.getView().dgl_searchresult.NextItem();
            break; 
        default:    TravelSmart.getView().dgl_searchresult.ShowDgl((JTextField)evt.getComponent());
    }
}//GEN-LAST:event_txtSearchEndKeyPressed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bttSearchEnd;
    private javax.swing.JButton bttSearchStart;
    private javax.swing.JButton icon;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList lstResult;
    private travelsmart.bgPanel pnEnd;
    private travelsmart.bgPanel pnList;
    private travelsmart.bgPanel pnStart;
    private javax.swing.JTextField txtSearchEnd;
    private javax.swing.JTextField txtSearchStart;
    // End of variables declaration//GEN-END:variables
}
