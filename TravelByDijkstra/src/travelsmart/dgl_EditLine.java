/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * dgl_AddPoint.java
 *
 * Created on Mar 12, 2012, 2:14:50 AM
 */
package travelsmart;

import java.awt.Color;
import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

/**
 *
 * @author dato
 */
public class dgl_EditLine extends javax.swing.JDialog {
    objLine editLine;
    objLine oldLine;
    int mouseX;
    int mouseY;

    
    public dgl_EditLine() {
        initComponents();
        //Set background for dialog
        this.setBackground(new Color(0,0,0,0));
        this.getContentPane().setBackground(new Color(0,0,0,50));
        this.bgPanel.bgUrl = Config.myDialog_bg;
        
        // Listen for changes in the text
        this.txtLength.getDocument().addDocumentListener(new DocumentListener() {
            public void changedUpdate(DocumentEvent e) {
                warn();
            }
            public void removeUpdate(DocumentEvent e) {
                warn();
            }
            public void insertUpdate(DocumentEvent e) {
                warn();
            }

            public void warn() {
                //khi text o? o textname thay doi..thay doi ten point tren map
                Double length;
                if(txtLength.getText().equals("")) length = 0.0;
                else length = Double.valueOf(txtLength.getText());
                editLine.Length = length;
                editLine.repaint();
            }
        });
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        bgPanel = new travelsmart.bgPanel();
        Container = new travelsmart.bgPanel();
        lblIndex = new javax.swing.JLabel();
        txtLength = new javax.swing.JTextField();
        bttSave = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        bttCancel = new javax.swing.JButton();
        bttDelete = new javax.swing.JButton();
        bttClose = new javax.swing.JButton();

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(travelsmart.TravelSmart.class).getContext().getResourceMap(dgl_EditLine.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setAlwaysOnTop(true);
        setName("Form"); // NOI18N
        setResizable(false);
        setUndecorated(true);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                formComponentHidden(evt);
            }
        });
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });
        getContentPane().setLayout(new java.awt.GridBagLayout());

        bgPanel.setName("bgPanel"); // NOI18N
        bgPanel.setLayout(new java.awt.GridBagLayout());

        Container.setMaximumSize(new java.awt.Dimension(288, 82));
        Container.setMinimumSize(new java.awt.Dimension(288, 82));
        Container.setName("Container"); // NOI18N

        lblIndex.setForeground(resourceMap.getColor("lblIndex.foreground")); // NOI18N
        lblIndex.setText(resourceMap.getString("lblIndex.text")); // NOI18N
        lblIndex.setName("lblIndex"); // NOI18N

        txtLength.setBackground(resourceMap.getColor("txtLength.background")); // NOI18N
        txtLength.setText(resourceMap.getString("txtLength.text")); // NOI18N
        txtLength.setName("txtLength"); // NOI18N
        txtLength.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtLengthFocusLost(evt);
            }
        });
        txtLength.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtLengthKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtLengthKeyTyped(evt);
            }
        });

        bttSave.setIcon(resourceMap.getIcon("bttSave.icon")); // NOI18N
        bttSave.setText(resourceMap.getString("bttSave.text")); // NOI18N
        bttSave.setBorder(null);
        bttSave.setContentAreaFilled(false);
        bttSave.setFocusPainted(false);
        bttSave.setName("bttSave"); // NOI18N
        bttSave.setPressedIcon(resourceMap.getIcon("bttSave.pressedIcon")); // NOI18N
        bttSave.setRolloverIcon(resourceMap.getIcon("bttSave.rolloverIcon")); // NOI18N
        bttSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttSaveActionPerformed(evt);
            }
        });

        jLabel1.setForeground(resourceMap.getColor("jLabel1.foreground")); // NOI18N
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        bttCancel.setIcon(resourceMap.getIcon("bttCancel.icon")); // NOI18N
        bttCancel.setText(resourceMap.getString("bttCancel.text")); // NOI18N
        bttCancel.setBorder(null);
        bttCancel.setContentAreaFilled(false);
        bttCancel.setFocusPainted(false);
        bttCancel.setName("bttCancel"); // NOI18N
        bttCancel.setPressedIcon(resourceMap.getIcon("bttCancel.pressedIcon")); // NOI18N
        bttCancel.setRolloverIcon(resourceMap.getIcon("bttCancel.rolloverIcon")); // NOI18N
        bttCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttCancelActionPerformed(evt);
            }
        });

        bttDelete.setIcon(resourceMap.getIcon("bttDelete.icon")); // NOI18N
        bttDelete.setText(resourceMap.getString("bttDelete.text")); // NOI18N
        bttDelete.setBorder(null);
        bttDelete.setContentAreaFilled(false);
        bttDelete.setFocusPainted(false);
        bttDelete.setName("bttDelete"); // NOI18N
        bttDelete.setPressedIcon(resourceMap.getIcon("bttDelete.pressedIcon")); // NOI18N
        bttDelete.setRolloverIcon(resourceMap.getIcon("bttDelete.rolloverIcon")); // NOI18N
        bttDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ContainerLayout = new javax.swing.GroupLayout(Container);
        Container.setLayout(ContainerLayout);
        ContainerLayout.setHorizontalGroup(
            ContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txtLength, javax.swing.GroupLayout.DEFAULT_SIZE, 288, Short.MAX_VALUE)
            .addGroup(ContainerLayout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblIndex))
            .addGroup(ContainerLayout.createSequentialGroup()
                .addComponent(bttSave)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bttDelete)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bttCancel))
        );
        ContainerLayout.setVerticalGroup(
            ContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ContainerLayout.createSequentialGroup()
                .addGroup(ContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(lblIndex))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtLength, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(ContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bttSave)
                    .addComponent(bttDelete)
                    .addComponent(bttCancel)))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 10, 10);
        bgPanel.add(Container, gridBagConstraints);

        bttClose.setIcon(resourceMap.getIcon("bttClose.icon")); // NOI18N
        bttClose.setBorder(null);
        bttClose.setContentAreaFilled(false);
        bttClose.setFocusPainted(false);
        bttClose.setName("bttClose"); // NOI18N
        bttClose.setRolloverIcon(resourceMap.getIcon("bttClose.rolloverIcon")); // NOI18N
        bttClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttCloseActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 10);
        bgPanel.add(bttClose, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(bgPanel, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void txtLengthFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtLengthFocusLost
// TODO add your handling code here:
    if(this.txtLength.getText().equals("")){
        this.txtLength.setText(String.valueOf(oldLine.Length));
    }    
}//GEN-LAST:event_txtLengthFocusLost

private void bttSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttSaveActionPerformed
    //Save to file
    FileProcess.editLine(editLine);
    this.oldLine.Length = editLine.Length;
    TravelSmart.getView().pn_Map.remove(editLine);
    TravelSmart.getView().pn_Map.add(oldLine);
    
    this.setVisible(false);
}//GEN-LAST:event_bttSaveActionPerformed

private void bttCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttCancelActionPerformed
    if(editLine != null && oldLine!= null){
        TravelSmart.getView().pn_Map.remove(editLine);
        TravelSmart.getView().pn_Map.add(oldLine);
        oldLine.SetLineState(0);
        TravelSmart.getView().pn_Map.repaint();
    }
    this.setVisible(false);
}//GEN-LAST:event_bttCancelActionPerformed

private void formComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentHidden
    bttCancelActionPerformed(null);
}//GEN-LAST:event_formComponentHidden

private void bttDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttDeleteActionPerformed
    //Show dialog for confirm delete    
    if(JOptionPane.showConfirmDialog(null, "Are you sure want to delete this line?","Confirm delete line", JOptionPane.YES_NO_OPTION)==JOptionPane.YES_OPTION){
        //Remove out of map
        TravelSmart.getView().pn_Map.remove(editLine);
        TravelSmart.getView().pn_Map.repaint();

        //Remove in array list
        TravelSmart.getApplication().lineCollect.remove(oldLine);

        //Remove file
        FileProcess.delLine(editLine.Index);

        this.editLine = null;
        this.oldLine = null;

        this.setVisible(false);    
    }
}//GEN-LAST:event_bttDeleteActionPerformed

private void txtLengthKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLengthKeyPressed
    if(evt.getKeyCode() == KeyEvent.VK_ENTER){
        bttSaveActionPerformed(null);
    }else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE){
        bttCancelActionPerformed(null);
    }
}//GEN-LAST:event_txtLengthKeyPressed

private void txtLengthKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLengthKeyTyped
    String badchars = "`~!@#$%^&*()_+=\\|\"':;?/><, -";
    char c = evt.getKeyChar();
    if((Character.isLetter(c) && !evt.isAltDown()) || badchars.indexOf(c) > -1) {
        evt.consume();
        return;
    }
    if(c == '-' && txtLength.getDocument().getLength() > 0) evt.consume();
    else super.processKeyEvent(evt);
}//GEN-LAST:event_txtLengthKeyTyped

private void bttCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttCloseActionPerformed
    bttCancelActionPerformed(evt);
}//GEN-LAST:event_bttCloseActionPerformed

private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
    this.setLocation(this.getLocation().x- mouseX + evt.getX(), this.getLocation().y- mouseY +evt.getY());
}//GEN-LAST:event_formMouseDragged

private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
    this.mouseX = evt.getX();
    this.mouseY = evt.getY();
}//GEN-LAST:event_formMousePressed

    public void showDgl(int x, int y, objLine editLine){
        if(this.isVisible()){
            TravelSmart.getView().pn_Map.remove(this.editLine);
            TravelSmart.getView().pn_Map.add(oldLine);
            oldLine.SetLineState(0);
            TravelSmart.getView().pn_Map.repaint();
        }else setVisible(true);
        this.setLocation(x, y);
        this.editLine = new objLine(editLine.Index,editLine.Start,editLine.End,editLine.Length); 
        this.editLine.ChangeStatus(MapStatus.EDIT_LINE);
        
        //Save old infomation
        this.oldLine = editLine;
        //Remove oldPoint, add editPoint to map
        TravelSmart.getView().pn_Map.remove(oldLine);
        TravelSmart.getView().pn_Map.add(this.editLine);
        
        //Show information in fields
        this.txtLength.setText(String.valueOf(editLine.Length));
        this.lblIndex.setText(String.valueOf(editLine.Index));
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private travelsmart.bgPanel Container;
    private travelsmart.bgPanel bgPanel;
    private javax.swing.JButton bttCancel;
    private javax.swing.JButton bttClose;
    private javax.swing.JButton bttDelete;
    private javax.swing.JButton bttSave;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblIndex;
    private javax.swing.JTextField txtLength;
    // End of variables declaration//GEN-END:variables
}
