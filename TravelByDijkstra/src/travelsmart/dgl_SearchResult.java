/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * dgl_SearchResult.java
 *
 * Created on Mar 14, 2012, 5:10:32 PM
 */
package travelsmart;

import java.awt.Color;
import java.awt.event.KeyEvent;
import javax.swing.DefaultListModel;
import javax.swing.JTextField;
import javax.swing.JViewport;

/**
 *
 * @author dato
 */
public class dgl_SearchResult extends javax.swing.JDialog {
    
    private DefaultListModel NamePoint = new DefaultListModel();
    private JTextField JTxTField;
    
    /** Creates new form dgl_SearchResult */
    public dgl_SearchResult() {
        this.setVisible(false);
        initComponents();
        
        this.setBackground(new Color(0,0,0,0));
        this.getContentPane().setBackground(new Color(0,0,0,0));
        this.lstSearchResult.setFocusTraversalKeysEnabled(false);
        this.lstSearchResult.setModel(NamePoint);
        this.lstSearchResult.setCellRenderer(new MyCellRender());
        this.lstSearchResult.setBackground(new Color(0,0,0,0));
        
        this.jScrollPane1.setBackground(Config.dglSearchResult_Color);
        this.jScrollPane1.getViewport().setBackground(Config.dglSearchResult_Color);
        this.jScrollPane1.getViewport().setScrollMode(JViewport.SIMPLE_SCROLL_MODE);
        
        this.jScrollPane1.getVerticalScrollBar().setUI(new myScrollBarUI());
        this.bgPanel1.bgUrl = Config.dglSearchResult_bg;
        this.repaint();
    }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        bgPanel1 = new travelsmart.bgPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstSearchResult = new javax.swing.JList();

        setAlwaysOnTop(true);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(travelsmart.TravelSmart.class).getContext().getResourceMap(dgl_SearchResult.class);
        setBackground(resourceMap.getColor("Form.background")); // NOI18N
        setForeground(resourceMap.getColor("Form.foreground")); // NOI18N
        setIconImage(null);
        setName("Form"); // NOI18N
        setResizable(false);
        setUndecorated(true);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        bgPanel1.setName("bgPanel1"); // NOI18N
        bgPanel1.setLayout(new java.awt.GridBagLayout());

        jScrollPane1.setBackground(resourceMap.getColor("jScrollPane1.background")); // NOI18N
        jScrollPane1.setBorder(null);
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setName("jScrollPane1"); // NOI18N

        lstSearchResult.setBackground(resourceMap.getColor("lstSearchResult.background")); // NOI18N
        lstSearchResult.setFont(resourceMap.getFont("lstSearchResult.font")); // NOI18N
        lstSearchResult.setForeground(resourceMap.getColor("lstSearchResult.foreground")); // NOI18N
        lstSearchResult.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        lstSearchResult.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstSearchResult.setName("lstSearchResult"); // NOI18N
        lstSearchResult.setOpaque(false);
        lstSearchResult.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                lstSearchResultKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(lstSearchResult);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        bgPanel1.add(jScrollPane1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(bgPanel1, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void lstSearchResultKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lstSearchResultKeyPressed
    switch(evt.getKeyCode()){
        case KeyEvent.VK_TAB:
            this.JTxTField.setText(this.lstSearchResult.getSelectedValue().toString());
            this.JTxTField.requestFocus();
            this.setVisible(false);
            break;
        case KeyEvent.VK_ENTER:
            this.JTxTField.setText(this.lstSearchResult.getSelectedValue().toString());
            this.JTxTField.requestFocus();
            this.setVisible(false);
            break;
        case KeyEvent.VK_ESCAPE:
            this.setVisible(false);
            break;
    }
}//GEN-LAST:event_lstSearchResultKeyPressed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private travelsmart.bgPanel bgPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList lstSearchResult;
    // End of variables declaration//GEN-END:variables

    void ShowDgl(JTextField txtfield){
        this.JTxTField = txtfield;
        if(!TravelSmart.getView().dgl_searchresult.isVisible()){
            TravelSmart.getView().dgl_searchresult.setVisible(true);     
        }
        if(this.JTxTField.getLocationOnScreen().y + 100<=TravelSmart.GetScreenSize().height){
            TravelSmart.getView().dgl_searchresult.setLocation(this.JTxTField.getLocationOnScreen().x, this.JTxTField.getLocationOnScreen().y+this.JTxTField.getHeight());
        }else TravelSmart.getView().dgl_searchresult.setLocation(this.JTxTField.getLocationOnScreen().x, this.JTxTField.getLocationOnScreen().y-100);
        TravelSmart.getView().dgl_searchresult.setSize(this.JTxTField.getWidth()+10, 100);
        JTxTField.requestFocus(true);
    }
    
    void SearchName(String text) {
        NamePoint.clear();
        for(objPoint p:TravelSmart.getApplication().pointCollect){
            if(p.Name.toLowerCase().indexOf(text.toLowerCase())!= -1){
                NamePoint.addElement(p.Name);
            }
        }
    }

    void NextItem() {
        if(!NamePoint.isEmpty()){
            int i;
            if(lstSearchResult.getSelectedIndex()==NamePoint.size()-1) i=0;
            else i=lstSearchResult.getSelectedIndex()+1;
            lstSearchResult.setSelectedIndex(i);
        }
        this.lstSearchResult.requestFocus();
    }

    private Color _newColor(Color shadowColor, int alpha) {
        if(shadowColor == null) return null;
        return new Color(shadowColor.getRed(), shadowColor.getGreen(), shadowColor.getBlue(), alpha);
    }
}
